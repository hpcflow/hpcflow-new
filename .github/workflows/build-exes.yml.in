name: build-exes

env:
  PYTHON_VERSION_BUILD_EXES: 3.9

on:
  workflow_dispatch:

jobs:
  build-executables:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-2019, macos-10.15]
        include:
          - os: windows-2019
            executable_ext: .exe
            executable_os: win
          - os: macos-10.15
            executable_ext: ""
            executable_os: macOS

    runs-on: {% raw %}${{ matrix.os }}{% endraw %}
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # get all history and tags

      - uses: actions/setup-python@v2
        with:
          python-version: {% raw %}${{ env.PYTHON_VERSION_BUILD_EXES }}{% endraw %}

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: {% raw %}venv-${{ matrix.os }}-${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install poetry
        run: python -m pip install poetry==1.1.11

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: poetry install

      - name: Get exectuable version name
        run: |
          vers=$(git describe --tags)
          echo "vers is: $vers"
          echo "vers=$vers" >> $GITHUB_ENV

      - name: Build with pyinstaller for {% raw %}${{matrix.executable_os}}{% endraw %}
        run: {% raw %}poetry run pyinstaller hpcflow/cli.py --name=hpcflow-${{ env.vers }} --onefile{% endraw %}

      - name: Rename executable for {% raw %}${{matrix.executable_os}}{% endraw %}
        run: {% raw %}mv dist/hpcflow-${{ env.vers }}${{ matrix.executable_ext }} dist/hpcflow-${{ env.vers }}-${{ matrix.executable_os }}${{ matrix.executable_ext }}{% endraw %}

      - uses: actions/upload-artifact@v2
        with:
          name: {% raw %}hpcflow-${{ env.vers }}-${{ matrix.executable_os }}${{ matrix.executable_ext }}{% endraw %}
          path: {% raw %}dist/hpcflow-${{ env.vers }}-${{ matrix.executable_os }}${{ matrix.executable_ext }}{% endraw %}

      - name: Basic executable test
        run: {% raw %}dist/hpcflow-${{ env.vers }}-${{ matrix.executable_os }}${{ matrix.executable_ext }} --version{% endraw %}

  build-executables-linux:
    runs-on: ubuntu-latest
    container:
      image: aplowman/centos7-poetry
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0 # get all history and tags

      - name: Configure poetry
        run: poetry config virtualenvs.in-project true

      - name: Cache the virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: {% raw %}venv-CentOS-${{ hashFiles('**/poetry.lock') }}{% endraw %}

      - name: Install dependencies
        run: |
          poetry install

      - name: Get exectuable version name
        run: |
          ls -la
          vers=$(git describe --tags)
          echo "vers is: $vers"
          echo "vers=$vers" >> $GITHUB_ENV

      - name: {% raw %}Build with pyinstaller for ${{matrix.executable_os}}{% endraw %}
        run: {% raw %}poetry run pyinstaller hpcflow/cli.py --name=hpcflow-${{ env.vers }}-linux --onefile{% endraw %}

      - uses: actions/upload-artifact@v2
        with:
          name: {% raw %}hpcflow-${{ env.vers }}-linux{% endraw %}
          path: {% raw %}dist/hpcflow-${{ env.vers }}-linux{% endraw %}

      - name: Basic executable test
        run: {% raw %}dist/hpcflow-${{ env.vers }}-linux --version{% endraw %}
